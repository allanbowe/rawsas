{"version":3,"file":"component---src-templates-post-list-template-tsx-8e6b27a6d28394cde48f.js","mappings":"sLA+DA,UAvDkBA,IAChB,MAAM,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAgBH,EAElCI,EAAQH,EAAKI,OAAOD,MAEpBE,EACgB,SAApBH,EAAYI,KACR,IACoB,QAApBJ,EAAYI,KACV,IAAIJ,EAAYK,QACI,YAApBL,EAAYI,KACV,aAAaE,IAAUN,EAAYO,QACnC,KAEJC,EACO,MAAXL,GAE+B,GAA3BH,EAAYS,YADZ,KAG6B,GAA3BT,EAAYS,YACVN,EACA,GAAGA,SAAeH,EAAYS,YAAc,IAChDC,EACO,MAAXP,GAEIH,EAAYS,aAAeT,EAAYW,SADvC,KAGE,GAAGR,SAAeH,EAAYS,YAAc,IAEpD,OACEG,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUd,EAAYc,SAAUf,SAAUA,GAChDa,EAAAA,cAACG,EAAAA,EAAI,CAAChB,SAAUA,IACfE,EAAMe,KAAI,CAACC,EAAMC,IAChBN,EAAAA,cAACO,EAAAA,EAAI,CACHrB,KAAMmB,EACNG,QAAS,CACPC,SAAS,GAEXC,IAAKJ,MAGRR,GACCE,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAId,EAAWe,UAAU,cAAa,mBAI7CjB,GACCI,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAIhB,EAAWiB,UAAU,eAAc,kBAIxC,C","sources":["webpack://Raw-SAS/./src/templates/post-list-template.tsx"],"sourcesContent":["import { graphql, Link, PageProps } from 'gatsby'\nimport React from 'react'\nimport kebabCase from 'lodash/kebabCase'\nimport Post from '../templates/post/post'\nimport Meta from '../components/meta/meta'\nimport Layout from '../components/layout/layout'\nimport { PageContext } from '../types'\n\nconst BlogList = (props: PageProps<Queries.BlogListQuery, PageContext>) => {\n  const { data, location, pageContext } = props\n\n  const posts = data.remark.posts\n\n  const iniPath =\n    pageContext.page == 'index'\n      ? `/`\n      : pageContext.page == 'year'\n        ? `/${pageContext.year}/`\n        : pageContext.page == 'category'\n          ? `/category/${kebabCase(pageContext.tag)}/`\n          : null\n\n  const newerPath =\n    iniPath == null\n      ? null\n      : pageContext.currentPage == 1\n        ? null\n        : pageContext.currentPage == 2\n          ? iniPath\n          : `${iniPath}page/${pageContext.currentPage - 1}`\n  const olderPath =\n    iniPath == null\n      ? null\n      : pageContext.currentPage == pageContext.numPages\n        ? null\n        : `${iniPath}page/${pageContext.currentPage + 1}`\n\n  return (\n    <Layout archives={pageContext.archives} location={location}>\n      <Meta location={location} />\n      {posts.map((post, i) => (\n        <Post\n          data={post as Queries.PostByPathQuery}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n      {olderPath && (\n        <Link to={olderPath} className=\"float-left\">\n          « Older Entries\n        </Link>\n      )}\n      {newerPath && (\n        <Link to={newerPath} className=\"float-right\">\n          Next Entries »\n        </Link>\n      )}\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query BlogList(\n    $filter: MarkdownRemarkFilterInput!\n    $skip: Int!\n    $limit: Int!\n  ) {\n    remark: allMarkdownRemark(\n      filter: $filter\n      limit: $limit\n      skip: $skip\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            title\n            path\n            previewImg {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n            tags\n            date(formatString: \"MMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["props","data","location","pageContext","posts","remark","iniPath","page","year","kebabCase","tag","newerPath","currentPage","olderPath","numPages","React","Layout","archives","Meta","map","post","i","Post","options","isIndex","key","Link","to","className"],"sourceRoot":""}