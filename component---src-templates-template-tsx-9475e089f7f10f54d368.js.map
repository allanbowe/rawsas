{"version":3,"file":"component---src-templates-template-tsx-9475e089f7f10f54d368.js","mappings":"0JAQA,MAQMA,EAAkBC,GARAC,KACtB,GAAwB,oBAAbC,SAA0B,CACnC,MAAMC,EAAOD,SAASE,cAAc,QAEpC,OADAD,EAAKE,UAAYJ,EACVE,EAAKG,aAAeH,EAAKI,SAClC,CACA,OAAON,CAAC,EAGDO,CAAeR,GAASS,OAAO,EAAG,KAAO,MA6BlD,UA1BoBC,IAA2D,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7E,MAAM,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAgBT,EAElCU,GACJH,SAAU,QAANN,EAAJM,EAAMI,YAAI,IAAAV,GAAa,QAAbC,EAAVD,EAAYW,mBAAW,IAAAV,GAAY,QAAZC,EAAvBD,EAAyBW,kBAAU,IAAAV,OAA/B,EAAJA,EAAqCW,iBAAaC,EAEpD,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUT,EAAYS,SAAUV,SAAUA,GAChDQ,EAAAA,cAACG,EAAAA,EAAI,CACHC,OAAgB,QAAThB,EAAAG,EAAKI,YAAI,IAAAP,GAAa,QAAbC,EAATD,EAAWQ,mBAAW,IAAAP,OAAb,EAATA,EAAwBe,QAAS,GACxCC,kBAAmBhC,GAAwB,QAATiB,EAAAC,EAAKI,YAAI,IAAAL,OAAA,EAATA,EAAWgB,OAAQ,IACrDZ,cAAeA,EACfF,SAAUA,IAEZQ,EAAAA,cAACO,EAAAA,EAAI,CACHhB,KAAMA,EACNiB,QAAS,CACPC,SAAS,MAIX,C","sources":["webpack://Raw-SAS/./src/templates/template.tsx"],"sourcesContent":["import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\n\nimport Post from './post/post'\nimport Meta from '../components/meta/meta'\nimport Layout from '../components/layout/layout'\nimport { PageContext } from '../types'\n\nconst extractContent = (s: string): string => {\n  if (typeof document !== `undefined`) {\n    const span = document.createElement('span')\n    span.innerHTML = s\n    return span.textContent || span.innerText\n  }\n  return s\n}\nconst getDescription = (content: string): string => {\n  return extractContent(content).substr(0, 250) + '...'\n}\n\nconst PostByPath = (props: PageProps<Queries.PostByPathQuery, PageContext>) => {\n  const { data, location, pageContext } = props\n\n  const previewImgURL =\n    data?.post?.frontmatter?.previewImg?.publicURL || undefined\n\n  return (\n    <div>\n      <Layout archives={pageContext.archives} location={location}>\n        <Meta\n          title={data.post?.frontmatter?.title || ''}\n          customDescription={getDescription(data.post?.html || '')}\n          previewImgURL={previewImgURL}\n          location={location}\n        />\n        <Post\n          data={data}\n          options={{\n            isIndex: false,\n          }}\n        />\n      </Layout>\n    </div>\n  )\n}\n\nexport default PostByPath\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        title\n        path\n        previewImg {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(width: 800, layout: CONSTRAINED)\n          }\n        }\n        tags\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"names":["getDescription","content","s","document","span","createElement","innerHTML","textContent","innerText","extractContent","substr","props","_data$post","_data$post$frontmatte","_data$post$frontmatte2","_data$post2","_data$post2$frontmatt","_data$post3","data","location","pageContext","previewImgURL","post","frontmatter","previewImg","publicURL","undefined","React","Layout","archives","Meta","title","customDescription","html","Post","options","isIndex"],"sourceRoot":""}