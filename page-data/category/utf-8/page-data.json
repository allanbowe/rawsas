{"componentChunkName":"component---src-templates-post-list-template-tsx","path":"/category/utf-8/","result":{"data":{"remark":{"posts":[{"post":{"html":"<p>Hit\n<a href=\"/reading-utf-8-in-filename-pipe\" target=\"_blank\">once more</a>\nwith a pesky en-dash issue (likely related to the transcoding between SAS &#x26; SQL Server) I discovered today there was no ‘in-built’ way to remove non-ascii (or extended-ascii) characters within SAS.<br />\n<br />\nThere is a great SUGI paper about this topic (<a href=\"https://www.lexjansen.com/pharmasug/2010/CC/CC13.pdf\" target=\"_blank\">here</a>) but the approach required the use of a data step.  Let me save you some fiddling around if you need\nthis as a macro capability, with the extract below.<br />\n<br /></p>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <b><span style=\"background: white; color: navy; font-family: 'Courier New';\">&nbsp; %macro</span></b><span style=\"background: white; font-family: 'Courier New';\"> ascii();</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%local</span>\n  <span style=\"background: white; font-family: 'Courier New';\"> i asciichars;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: green; font-family: 'Courier New';\">/_ adjust here to include any additional chars _/</span>\n  <span style=\"background: white; font-family: 'Courier New';\"></span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%do</span>\n  <span style=\"background: white; font-family: 'Courier New';\"> i=</span><b><span style=\"background: white; color: teal; font-family: 'Courier New';\">32</span></b><span style=\"background: white; font-family: 'Courier New';\"> </span>\n  <span style=\"background: white; color: blue; font-family: 'Courier New';\">%to</span><span style=\"background: white; font-family: 'Courier New';\"> </span>\n  <b><span style=\"background: white; color: teal; font-family: 'Courier New';\">126</span></b><span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%let</span>\n  <span style=\"background: white; font-family: 'Courier New';\">asciichars=&amp;asciichars</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%qsysfunc</span>\n  <span style=\"background: white; font-family: 'Courier New';\">(byte(&amp;i));</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%end</span>\n  <span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">%str</span>\n  <span style=\"background: white; font-family: 'Courier New';\">(&amp;asciichars)</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <b><span style=\"background: white; color: navy; font-family: 'Courier New';\">&nbsp; %mend</span></b><span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\"><br /></span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; /_ store in macvar for efficiency _/</span><span style=\"background: white; font-family: 'Courier New';\"></span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><span style=\"background: white; color: blue; font-family: 'Courier New';\">&nbsp; %let</span><span style=\"background: white; font-family: 'Courier New';\"> ascii*chars=%ascii();</span></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><span style=\"background: white; color: blue; font-family: 'Courier New';\">&nbsp; %put</span><span style=\"background: white; font-family: 'Courier New';\"> &amp;=ascii_chars;</span></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><br /></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; /**</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; &nbsp;* Example usage within macro language</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; &nbsp;*/</span><span style=\"background: white; font-family: 'Courier New';\"></span></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: blue; font-family: 'Courier New';\">&nbsp; %put</span><span style=\"background: white; font-family: 'Courier New';\"> </span>\n  <span style=\"background: white; color: blue; font-family: 'Courier New';\">%sysfunc</span><span style=\"background: white; font-family: 'Courier New';\">(compress(my – endash,&amp;ascii_chars,k ));</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><br /></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; /**</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; &nbsp;* Example usage within data step</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\"><span style=\"background: white; color: green; font-family: 'Courier New';\">&nbsp; &nbsp;*/</span><span style=\"background: white; font-family: 'Courier New';\"></span></div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <b><span style=\"background: white; color: navy; font-family: 'Courier New';\">&nbsp; data</span></b><span style=\"background: white; font-family: 'Courier New';\"> </span>\n  <span style=\"background: white; color: blue; font-family: 'Courier New';\">\\_null*</span><span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;str=</span><span style=\"background: white; color: purple; font-family: 'Courier New';\">\"goodbye •–—˜™š›œžŸ&nbsp;¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶· nasties\"</span>\n  <span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;asciichars=symget(</span><span style=\"background: white; color: purple; font-family: 'Courier New';\">'ascii_chars'</span>\n  <span style=\"background: white; font-family: 'Courier New';\">);</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp; out=compress(str,asciichars,</span><span style=\"background: white; color: purple; font-family: 'Courier New';\">'k'</span>\n  <span style=\"background: white; font-family: 'Courier New';\">);</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <span style=\"background: white; font-family: 'Courier New';\">&nbsp; &nbsp;&nbsp;</span><span style=\"background: white; color: blue; font-family: 'Courier New';\">put</span>\n  <span style=\"background: white; font-family: 'Courier New';\"> out=;</span>\n</div>\n<div style=\"margin: 0cm 0cm 0.0001pt 5.65pt;\">\n  <b><span style=\"background: white; color: navy; font-family: 'Courier New';\">&nbsp; run</span></b><span style=\"background: white; font-family: 'Courier New';\">;</span>\n</div>\n<div style=\"margin-left: 5.65pt;\"></div>\n<br />\nThe main gotchas were as follows:<br />\n<br />\n<ul>\n  <li>\n    The characters in byte(3,4,5,12,13) do funny things in macro (open code recursion etc)\n  </li>\n  <li>\n    It is not advisable to reference rank() above 127 as this extended set\n    <a href=\"https://support.sas.com/documentation/cdl/en/hostwin/67962/HTML/default/viewer.htm#n1s18z766s30ddn1taghd7crnhsc.htm\" target=\"_blank\">can vary</a>\n    country to country (the byte # may not be the same as the rank #)\n  </li>\n  <li>\n    The 32-126 range includes apostrophe and single quote, and thus they need to be handled appropriately!\n  </li>\n</ul>\n<br />","frontmatter":{"title":"Stripping Non-ASCII Characters within Macro","path":"/stripping-non-ascii-characters-within-macro/","previewImg":null,"tags":["ascii","byte","compress","en dash","macro","non-ascii","rank","sas","utf-8"],"date":"Sep 08, 2016"}}}]}},"pageContext":{"page":"category","archives":{"2012":8,"2013":10,"2014":4,"2015":7,"2016":17,"2017":12,"2018":9,"2019":2,"2020":3,"2021":1,"2022":7,"2023":1,"2024":1,"2025":3},"filter":{"frontmatter":{"tags":{"in":["utf-8"]}}},"limit":10,"skip":0,"numPages":1,"currentPage":1,"tag":"utf-8"}},"staticQueryHashes":["1133634862"],"slicesMap":{}}