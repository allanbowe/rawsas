{"componentChunkName":"component---src-templates-template-tsx","path":"/loading-files-to-sas-with-curl/","result":{"data":{"post":{"id":"5738ed11-9516-5bc2-846e-a68e619c7062","html":"<p>A useful feature of SAS Stored Processes is the ability to load multiple files in a single request. This could be a bunch of CSVs for processing, or even a <code class=\"language-text\">.sas</code> program that you want to <code class=\"language-text\">%include</code> along with some associated data (deliberate SAS injection). This is particularly useful when you are running a build process, eg for a web application, and you need to send across some SAS programs that should be compiled into Stored Processes and re-downloaded as a distributable SPK. If you send your executable .sas program as the first file, to a ‘master’ STP that has just one line of code (<code class=\"language-text\">%inc &amp;amp;_webin_fileref1/source2;</code>), then this becomes the only entry point you need when running from a non-SAS environment!</p>\n<p>Anyway, here is the sample code:</p>\n<pre>curl -v -L -b cookiefile -c cookiefile \\\n    -H \"Content-Type: multipart/form-data\" \\\n    -F \"myprogram=@./runme.sas\" \\\n    -F \"somefile1=@./processme.csv\" \\\n    -F \"somefile2=@./processmeaswell.csv\" \\\n    \"$SERVER?_program=$STP&amp;_username=$USER&amp;_password=$PASS\"\n    --output \"/tmp/out.txt\"</pre>\n<p>Things to note:</p>\n<h3>curl options</h3>\n<ul>\n \t<li>-v = verbose</li>\n \t<li>-L = follow the redirects</li>\n \t<li>-b / -c = cookie in / out</li>\n \t<li>-H = http header</li>\n \t<li>-F = Files for upload</li>\n \t<li>--output = output filename</li>\n</ul>\n<h3>Substitutions</h3>\n<ul>\n \t<li>$SERVER = your SAS server, eg: https://yourserver.com/SASStoredProcess/do</li>\n \t<li>$STP = full metadata path to STP, eg:  /my/meta/path/to/my/service</li>\n \t<li>$USER = sas username, including @saspw suffix if an internal account</li>\n \t<li>$PASS = sas password</li>\n</ul>\n<strong>SAS Considerations</strong>\n<p>The following automatically assigned macro variables will be helpful when accessing the files you have uploaded:</p>\n<ul>\n \t<li>_WEBIN_FILE_COUNT - contains a count of the number of files that were uploaded</li>\n \t<li>_WEBIN_FILEREF - a unique fileref that can be used to access the file</li>\n \t<li>_WEBIN_FILENAME - the location in which the file is saved in SAS (eg in WORK)</li>\n \t<li>_WEBIN_NAME - the name given for the file on upload (eg somefile1 / somefile2 in the example)</li>\n</ul>\nThe above variables are actually macro variable arrays - so _WEBIN_FILENAME1 will be the first,  _WEBIN_FILENAME2 will be the second, and so on.\n<h3>Further resources</h3>\nIf you want more background on building web applications with SAS, check out the following resources!\n<ul>\n \t<li><a href=\"https://github.com/sasjs/core\">MacroCore</a> - library for SAS Application Development</li>\n \t<li><a href=\"https://github.com/sasjs/adapter\">SASjs</a> - Adapter for SAS-JS communication</li>\n \t<li><a href=\"https://github.com/sasjs/cli\">sasjs-cli</a> - utility for building SAS Apps</li>\n \t<li>https://sasjs.io - guide to building web apps on SAS</li>\n</ul>\n<a href=\"https://datacontroller.io\">Data Controller</a> is also a super useful tool for SAS data capture and <a href=\"https://www.linkedin.com/pulse/zen-art-data-quality-allan-bowe/\">data quality</a>, as well as <a href=\"https://datacontroller.io/euc-management-system/\">EUC</a> / Power BI integration and is available as a free 30 day demo version.\n<p>Happy coding!</p>","frontmatter":{"title":"Loading files to SAS with CURL","path":"/loading-files-to-sas-with-curl/","previewImg":{"publicURL":"/static/86eccdd200412a55e8c60e21c5560968/frontmatter3.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/86eccdd200412a55e8c60e21c5560968/a7181/frontmatter3.png","srcSet":"/static/86eccdd200412a55e8c60e21c5560968/74380/frontmatter3.png 200w,\n/static/86eccdd200412a55e8c60e21c5560968/fd832/frontmatter3.png 400w,\n/static/86eccdd200412a55e8c60e21c5560968/a7181/frontmatter3.png 800w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/static/86eccdd200412a55e8c60e21c5560968/cff98/frontmatter3.webp 200w,\n/static/86eccdd200412a55e8c60e21c5560968/76faa/frontmatter3.webp 400w,\n/static/86eccdd200412a55e8c60e21c5560968/047a8/frontmatter3.webp 800w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":251}}},"tags":["sas","SAS Stored Process Web Application","sas web app","SAS Web Applications","SAS Web Apps","Stored Process Web Applications","Stored Processes","Web Applications"],"date":"Dec 02, 2018"}}},"pageContext":{"archives":{"2012":8,"2013":10,"2014":4,"2015":7,"2016":17,"2017":12,"2018":9,"2019":2,"2020":3,"2021":1,"2022":7,"2023":1,"2024":1,"2025":3}}},"staticQueryHashes":["1133634862"],"slicesMap":{}}